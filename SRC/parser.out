Created by PLY version 3.7 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> PROGRAM
Rule 1     PROGRAM -> STATEMENT
Rule 2     PROGRAM -> STATEMENT DOT PROGRAM
Rule 3     STATEMENT -> ASSIGNMENT
Rule 4     ASSIGNMENT -> SOMETHING VAR IS EXPRESSION
Rule 5     EXPRESSION -> NUMBER
Rule 6     EXPRESSION -> SOMETHING VAR
Rule 7     EXPRESSION -> EXPRESSION PLUS EXPRESSION
Rule 8     EXPRESSION -> EXPRESSION MINUS EXPRESSION
Rule 9     EXPRESSION -> EXPRESSION BY EXPRESSION
Rule 10    EXPRESSION -> EXPRESSION OUT OF EXPRESSION

Terminals, with rules where they appear

BY                   : 9
DOT                  : 2
IS                   : 4
MINUS                : 8
NUMBER               : 5
OF                   : 10
OUT                  : 10
PLUS                 : 7
SOMETHING            : 4 6
VAR                  : 4 6
error                : 

Nonterminals, with rules where they appear

ASSIGNMENT           : 3
EXPRESSION           : 4 7 7 8 8 9 9 10 10
PROGRAM              : 2 0
STATEMENT            : 1 2

Parsing method: LALR

state 0

    (0) S' -> . PROGRAM
    (1) PROGRAM -> . STATEMENT
    (2) PROGRAM -> . STATEMENT DOT PROGRAM
    (3) STATEMENT -> . ASSIGNMENT
    (4) ASSIGNMENT -> . SOMETHING VAR IS EXPRESSION

    SOMETHING       shift and go to state 2

    ASSIGNMENT                     shift and go to state 1
    PROGRAM                        shift and go to state 4
    STATEMENT                      shift and go to state 3

state 1

    (3) STATEMENT -> ASSIGNMENT .

    DOT             reduce using rule 3 (STATEMENT -> ASSIGNMENT .)
    $end            reduce using rule 3 (STATEMENT -> ASSIGNMENT .)


state 2

    (4) ASSIGNMENT -> SOMETHING . VAR IS EXPRESSION

    VAR             shift and go to state 5


state 3

    (1) PROGRAM -> STATEMENT .
    (2) PROGRAM -> STATEMENT . DOT PROGRAM

    $end            reduce using rule 1 (PROGRAM -> STATEMENT .)
    DOT             shift and go to state 6


state 4

    (0) S' -> PROGRAM .



state 5

    (4) ASSIGNMENT -> SOMETHING VAR . IS EXPRESSION

    IS              shift and go to state 7


state 6

    (2) PROGRAM -> STATEMENT DOT . PROGRAM
    (1) PROGRAM -> . STATEMENT
    (2) PROGRAM -> . STATEMENT DOT PROGRAM
    (3) STATEMENT -> . ASSIGNMENT
    (4) ASSIGNMENT -> . SOMETHING VAR IS EXPRESSION

    SOMETHING       shift and go to state 2

    ASSIGNMENT                     shift and go to state 1
    PROGRAM                        shift and go to state 8
    STATEMENT                      shift and go to state 3

state 7

    (4) ASSIGNMENT -> SOMETHING VAR IS . EXPRESSION
    (5) EXPRESSION -> . NUMBER
    (6) EXPRESSION -> . SOMETHING VAR
    (7) EXPRESSION -> . EXPRESSION PLUS EXPRESSION
    (8) EXPRESSION -> . EXPRESSION MINUS EXPRESSION
    (9) EXPRESSION -> . EXPRESSION BY EXPRESSION
    (10) EXPRESSION -> . EXPRESSION OUT OF EXPRESSION

    NUMBER          shift and go to state 10
    SOMETHING       shift and go to state 11

    EXPRESSION                     shift and go to state 9

state 8

    (2) PROGRAM -> STATEMENT DOT PROGRAM .

    $end            reduce using rule 2 (PROGRAM -> STATEMENT DOT PROGRAM .)


state 9

    (4) ASSIGNMENT -> SOMETHING VAR IS EXPRESSION .
    (7) EXPRESSION -> EXPRESSION . PLUS EXPRESSION
    (8) EXPRESSION -> EXPRESSION . MINUS EXPRESSION
    (9) EXPRESSION -> EXPRESSION . BY EXPRESSION
    (10) EXPRESSION -> EXPRESSION . OUT OF EXPRESSION

    DOT             reduce using rule 4 (ASSIGNMENT -> SOMETHING VAR IS EXPRESSION .)
    $end            reduce using rule 4 (ASSIGNMENT -> SOMETHING VAR IS EXPRESSION .)
    PLUS            shift and go to state 14
    MINUS           shift and go to state 13
    BY              shift and go to state 12
    OUT             shift and go to state 15


state 10

    (5) EXPRESSION -> NUMBER .

    PLUS            reduce using rule 5 (EXPRESSION -> NUMBER .)
    MINUS           reduce using rule 5 (EXPRESSION -> NUMBER .)
    BY              reduce using rule 5 (EXPRESSION -> NUMBER .)
    OUT             reduce using rule 5 (EXPRESSION -> NUMBER .)
    DOT             reduce using rule 5 (EXPRESSION -> NUMBER .)
    $end            reduce using rule 5 (EXPRESSION -> NUMBER .)


state 11

    (6) EXPRESSION -> SOMETHING . VAR

    VAR             shift and go to state 16


state 12

    (9) EXPRESSION -> EXPRESSION BY . EXPRESSION
    (5) EXPRESSION -> . NUMBER
    (6) EXPRESSION -> . SOMETHING VAR
    (7) EXPRESSION -> . EXPRESSION PLUS EXPRESSION
    (8) EXPRESSION -> . EXPRESSION MINUS EXPRESSION
    (9) EXPRESSION -> . EXPRESSION BY EXPRESSION
    (10) EXPRESSION -> . EXPRESSION OUT OF EXPRESSION

    NUMBER          shift and go to state 10
    SOMETHING       shift and go to state 11

    EXPRESSION                     shift and go to state 17

state 13

    (8) EXPRESSION -> EXPRESSION MINUS . EXPRESSION
    (5) EXPRESSION -> . NUMBER
    (6) EXPRESSION -> . SOMETHING VAR
    (7) EXPRESSION -> . EXPRESSION PLUS EXPRESSION
    (8) EXPRESSION -> . EXPRESSION MINUS EXPRESSION
    (9) EXPRESSION -> . EXPRESSION BY EXPRESSION
    (10) EXPRESSION -> . EXPRESSION OUT OF EXPRESSION

    NUMBER          shift and go to state 10
    SOMETHING       shift and go to state 11

    EXPRESSION                     shift and go to state 18

state 14

    (7) EXPRESSION -> EXPRESSION PLUS . EXPRESSION
    (5) EXPRESSION -> . NUMBER
    (6) EXPRESSION -> . SOMETHING VAR
    (7) EXPRESSION -> . EXPRESSION PLUS EXPRESSION
    (8) EXPRESSION -> . EXPRESSION MINUS EXPRESSION
    (9) EXPRESSION -> . EXPRESSION BY EXPRESSION
    (10) EXPRESSION -> . EXPRESSION OUT OF EXPRESSION

    NUMBER          shift and go to state 10
    SOMETHING       shift and go to state 11

    EXPRESSION                     shift and go to state 19

state 15

    (10) EXPRESSION -> EXPRESSION OUT . OF EXPRESSION

    OF              shift and go to state 20


state 16

    (6) EXPRESSION -> SOMETHING VAR .

    PLUS            reduce using rule 6 (EXPRESSION -> SOMETHING VAR .)
    MINUS           reduce using rule 6 (EXPRESSION -> SOMETHING VAR .)
    BY              reduce using rule 6 (EXPRESSION -> SOMETHING VAR .)
    OUT             reduce using rule 6 (EXPRESSION -> SOMETHING VAR .)
    DOT             reduce using rule 6 (EXPRESSION -> SOMETHING VAR .)
    $end            reduce using rule 6 (EXPRESSION -> SOMETHING VAR .)


state 17

    (9) EXPRESSION -> EXPRESSION BY EXPRESSION .
    (7) EXPRESSION -> EXPRESSION . PLUS EXPRESSION
    (8) EXPRESSION -> EXPRESSION . MINUS EXPRESSION
    (9) EXPRESSION -> EXPRESSION . BY EXPRESSION
    (10) EXPRESSION -> EXPRESSION . OUT OF EXPRESSION

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for BY resolved as shift
  ! shift/reduce conflict for OUT resolved as shift
    DOT             reduce using rule 9 (EXPRESSION -> EXPRESSION BY EXPRESSION .)
    $end            reduce using rule 9 (EXPRESSION -> EXPRESSION BY EXPRESSION .)
    PLUS            shift and go to state 14
    MINUS           shift and go to state 13
    BY              shift and go to state 12
    OUT             shift and go to state 15

  ! PLUS            [ reduce using rule 9 (EXPRESSION -> EXPRESSION BY EXPRESSION .) ]
  ! MINUS           [ reduce using rule 9 (EXPRESSION -> EXPRESSION BY EXPRESSION .) ]
  ! BY              [ reduce using rule 9 (EXPRESSION -> EXPRESSION BY EXPRESSION .) ]
  ! OUT             [ reduce using rule 9 (EXPRESSION -> EXPRESSION BY EXPRESSION .) ]


state 18

    (8) EXPRESSION -> EXPRESSION MINUS EXPRESSION .
    (7) EXPRESSION -> EXPRESSION . PLUS EXPRESSION
    (8) EXPRESSION -> EXPRESSION . MINUS EXPRESSION
    (9) EXPRESSION -> EXPRESSION . BY EXPRESSION
    (10) EXPRESSION -> EXPRESSION . OUT OF EXPRESSION

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for BY resolved as shift
  ! shift/reduce conflict for OUT resolved as shift
    DOT             reduce using rule 8 (EXPRESSION -> EXPRESSION MINUS EXPRESSION .)
    $end            reduce using rule 8 (EXPRESSION -> EXPRESSION MINUS EXPRESSION .)
    PLUS            shift and go to state 14
    MINUS           shift and go to state 13
    BY              shift and go to state 12
    OUT             shift and go to state 15

  ! PLUS            [ reduce using rule 8 (EXPRESSION -> EXPRESSION MINUS EXPRESSION .) ]
  ! MINUS           [ reduce using rule 8 (EXPRESSION -> EXPRESSION MINUS EXPRESSION .) ]
  ! BY              [ reduce using rule 8 (EXPRESSION -> EXPRESSION MINUS EXPRESSION .) ]
  ! OUT             [ reduce using rule 8 (EXPRESSION -> EXPRESSION MINUS EXPRESSION .) ]


state 19

    (7) EXPRESSION -> EXPRESSION PLUS EXPRESSION .
    (7) EXPRESSION -> EXPRESSION . PLUS EXPRESSION
    (8) EXPRESSION -> EXPRESSION . MINUS EXPRESSION
    (9) EXPRESSION -> EXPRESSION . BY EXPRESSION
    (10) EXPRESSION -> EXPRESSION . OUT OF EXPRESSION

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for BY resolved as shift
  ! shift/reduce conflict for OUT resolved as shift
    DOT             reduce using rule 7 (EXPRESSION -> EXPRESSION PLUS EXPRESSION .)
    $end            reduce using rule 7 (EXPRESSION -> EXPRESSION PLUS EXPRESSION .)
    PLUS            shift and go to state 14
    MINUS           shift and go to state 13
    BY              shift and go to state 12
    OUT             shift and go to state 15

  ! PLUS            [ reduce using rule 7 (EXPRESSION -> EXPRESSION PLUS EXPRESSION .) ]
  ! MINUS           [ reduce using rule 7 (EXPRESSION -> EXPRESSION PLUS EXPRESSION .) ]
  ! BY              [ reduce using rule 7 (EXPRESSION -> EXPRESSION PLUS EXPRESSION .) ]
  ! OUT             [ reduce using rule 7 (EXPRESSION -> EXPRESSION PLUS EXPRESSION .) ]


state 20

    (10) EXPRESSION -> EXPRESSION OUT OF . EXPRESSION
    (5) EXPRESSION -> . NUMBER
    (6) EXPRESSION -> . SOMETHING VAR
    (7) EXPRESSION -> . EXPRESSION PLUS EXPRESSION
    (8) EXPRESSION -> . EXPRESSION MINUS EXPRESSION
    (9) EXPRESSION -> . EXPRESSION BY EXPRESSION
    (10) EXPRESSION -> . EXPRESSION OUT OF EXPRESSION

    NUMBER          shift and go to state 10
    SOMETHING       shift and go to state 11

    EXPRESSION                     shift and go to state 21

state 21

    (10) EXPRESSION -> EXPRESSION OUT OF EXPRESSION .
    (7) EXPRESSION -> EXPRESSION . PLUS EXPRESSION
    (8) EXPRESSION -> EXPRESSION . MINUS EXPRESSION
    (9) EXPRESSION -> EXPRESSION . BY EXPRESSION
    (10) EXPRESSION -> EXPRESSION . OUT OF EXPRESSION

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for BY resolved as shift
  ! shift/reduce conflict for OUT resolved as shift
    DOT             reduce using rule 10 (EXPRESSION -> EXPRESSION OUT OF EXPRESSION .)
    $end            reduce using rule 10 (EXPRESSION -> EXPRESSION OUT OF EXPRESSION .)
    PLUS            shift and go to state 14
    MINUS           shift and go to state 13
    BY              shift and go to state 12
    OUT             shift and go to state 15

  ! PLUS            [ reduce using rule 10 (EXPRESSION -> EXPRESSION OUT OF EXPRESSION .) ]
  ! MINUS           [ reduce using rule 10 (EXPRESSION -> EXPRESSION OUT OF EXPRESSION .) ]
  ! BY              [ reduce using rule 10 (EXPRESSION -> EXPRESSION OUT OF EXPRESSION .) ]
  ! OUT             [ reduce using rule 10 (EXPRESSION -> EXPRESSION OUT OF EXPRESSION .) ]

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PLUS in state 17 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 17 resolved as shift
WARNING: shift/reduce conflict for BY in state 17 resolved as shift
WARNING: shift/reduce conflict for OUT in state 17 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 18 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 18 resolved as shift
WARNING: shift/reduce conflict for BY in state 18 resolved as shift
WARNING: shift/reduce conflict for OUT in state 18 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 19 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 19 resolved as shift
WARNING: shift/reduce conflict for BY in state 19 resolved as shift
WARNING: shift/reduce conflict for OUT in state 19 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 21 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 21 resolved as shift
WARNING: shift/reduce conflict for BY in state 21 resolved as shift
WARNING: shift/reduce conflict for OUT in state 21 resolved as shift
